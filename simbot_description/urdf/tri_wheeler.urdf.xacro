<?xml version="1.0" ?>

<robot name="tri_wheeler" xmlns:xacro="https://www.ros.org/wiki/xacro" >

    <!-- Constants for robot dimensions -->
    <xacro:property name="PI" value="3.1415926535897931"/>
    <!-- properties of chassis link -->
    <xacro:property name="CHASSIS_X" value="0.8" />
    <xacro:property name="CHASSIS_Y" value="0.6" />
    <xacro:property name="CHASSIS_Z" value="0.2" />
    <xacro:property name="CHASSIS_M" value="1" />
    <!-- properties of plate link -->
    <xacro:property name="PLATE_R" value="0.35"/>
    <xacro:property name="PLATE_L" value="0.04"/>
    <xacro:property name="PLATE_M" value="0.2"/>
    <!-- properties of plate support link -->
    <xacro:property name="SUPPORT_R" value="0.2"/>
    <xacro:property name="SUPPORT_L" value="0.15"/>
    <xacro:property name="SUPPORT_M" value="0.4"/>
    <!-- properties of link_caster -->
    <xacro:property name="CASTER_R" value="0.1"/>
    <xacro:property name="CASTER_M" value="0.1"/>
    <!-- properties of wheel -->
    <xacro:property name="WHEEL_R" value="0.2"/>
    <xacro:property name="WHEEL_L" value="0.08"/>
    <xacro:property name="WHEEL_M" value="0.5"/>
    <!-- Wheel Mounting Positions -->
    <xacro:property name="WHEELBASE" value="0.7" />
    <xacro:property name="TRACK" value="0.7" />

    <!-- Import all Gazebo-customization elements, including Gazebo colors -->
    <!-- <xacro:include filename="$(find simbot_description)/urdf/tri_wheeler.gazebo" /> -->
    <!-- Import Rviz colors -->
    <xacro:include filename="$(find simbot_description)/urdf/materials.xacro" />

    <!-- Base link is the center of the robot's bottom plate -->
    <link name="chassis">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${CHASSIS_X} ${CHASSIS_Y} ${CHASSIS_Z}"/> />
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${CHASSIS_X} ${CHASSIS_Y} ${CHASSIS_Z}"/> />
            </geometry>
        </collision>
    </link>
    <!-- KDL does not support a root link with an inertia, create a dummy link only contains inertia of base_link -->
    <joint name="chassis-chassis_inertial" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="chassis" />
        <child link="chassis_inertial" />
    </joint>
    <link name="chassis_inertial">
        <inertial>
            <mass value="${CHASSIS_M}"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="${1/12*CHASSIS_M*(CHASSIS_Y*CHASSIS_Y+CHASSIS_Z*CHASSIS_Z)}" ixy="0" ixz="0" iyy="${1/12*CHASSIS_M*(CHASSIS_Z*CHASSIS_Z+CHASSIS_X*CHASSIS_X)}" iyz="0" izz="${1/12*CHASSIS_M*(CHASSIS_X*CHASSIS_X+CHASSIS_Y*CHASSIS_Y)}"/>
        </inertial>
    </link>

    <!-- left wheel -->
    <joint name="$chassis-left_wheel" type="continuous">
        <origin xyz="-${WHEELBASE/2} ${TRACK/2} 0" rpy="0 0 0" />
        <parent link="chassis"/>
        <child link="left_wheel"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <link name="left_wheel">
        <visual>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${WHEEL_L}" radius="${WHEEL_R}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${WHEEL_L}" radius="${WHEEL_R}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${WHEEL_M}"/>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
            <inertia ixx="${1/12*WHEEL_M*(3*WHEEL_R*WHEEL_R+WHEEL_L*WHEEL_L)}" ixy="0" ixz="0" iyy="${1/12*WHEEL_M*(3*WHEEL_R*WHEEL_R+WHEEL_L*WHEEL_L)}" iyz="0" izz="${1/2*WHEEL_M*WHEEL_R*WHEEL_R}"/>
        </inertial>
    </link>

    <!-- right wheel -->
    <joint name="$chassis-right_wheel" type="continuous">
        <origin xyz="-${WHEELBASE/2} -${TRACK/2} 0" rpy="0 0 0" />
        <parent link="chassis"/>
        <child link="right_wheel"/>
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <link name="right_wheel">
        <visual>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${WHEEL_L}" radius="${WHEEL_R}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${WHEEL_L}" radius="${WHEEL_R}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${WHEEL_M}"/>
            <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
            <inertia ixx="${1/12*WHEEL_M*(3*WHEEL_R*WHEEL_R+WHEEL_L*WHEEL_L)}" ixy="0" ixz="0" iyy="${1/12*WHEEL_M*(3*WHEEL_R*WHEEL_R+WHEEL_L*WHEEL_L)}" iyz="0" izz="${1/2*WHEEL_M*WHEEL_R*WHEEL_R}"/>
        </inertial>
    </link>

    <!-- caster ball -->
    <joint name="joint_chassis_caster" type="fixed">
        <origin rpy="0 0 0" xyz="${WHEELBASE/2} 0 -${CHASSIS_Z/2}"/>
        <parent link="chassis"/>
        <child link="caster"/>
    </joint>

    <link name="caster">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <sphere radius="${CASTER_R}"/>
            </geometry>
            <material name="grey"/>
        </visual>
        <collision>
            <origin rpy=" 0 0 0" xyz="0 0 0"/>
            <geometry>
                <sphere radius="${CASTER_R}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${CASTER_M}"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="${2/5*CASTER_M*CASTER_R*CASTER_R}" ixy="0" ixz="0" iyy="${2/5*CASTER_M*CASTER_R*CASTER_R}" iyz="0" izz="${2/5*CASTER_M*CASTER_R*CASTER_R}"/>
        </inertial>
    </link>

    <joint name="chassis-support" type="fixed">
        <origin rpy="0 0 0" xyz="-${WHEELBASE/4} 0 ${CHASSIS_Z/2+SUPPORT_L/2}"/>
        <parent link="chassis"/>
        <child link="support"/>
    </joint>

    <link name="support">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${SUPPORT_L}" radius="${SUPPORT_R}"/>
            </geometry>
            <material name="grey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${SUPPORT_L}" radius="${SUPPORT_R}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${SUPPORT_M}"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="${1/12*SUPPORT_M*(3*SUPPORT_R*SUPPORT_R+SUPPORT_L*SUPPORT_L)}" ixy="0" ixz="0" iyy="${1/12*SUPPORT_M*(3*SUPPORT_R*SUPPORT_R+SUPPORT_L*SUPPORT_L)}" iyz="0" izz="${1/2*SUPPORT_M*SUPPORT_R*SUPPORT_R}"/>
        </inertial>
    </link>

    <joint name="support-plate" type="revolute">
        <origin rpy="0 0 0" xyz="0 0 ${SUPPORT_L/2+PLATE_L/2}"/>
        <parent link="support"/>
        <child link="plate"/>
        <limit effort="0" lower="0" upper="0" velocity="0"/>
        <axis rpy="0 0 0" xyz="0 0 1"/>
    </joint>

    <link name="plate">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${PLATE_L}" radius="${PLATE_R}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${PLATE_L}" radius="${PLATE_R}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${PLATE_M}"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="${1/12*PLATE_M*(3*PLATE_R*PLATE_R+PLATE_L*PLATE_L)}" ixy="0" ixz="0" iyy="${1/12*PLATE_M*(3*PLATE_R*PLATE_R+PLATE_L*PLATE_L)}" iyz="0" izz="${1/2*PLATE_M*PLATE_R*PLATE_R}"/>
        </inertial>
    </link>



    <transmission name="left_wheel-trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="left_wheel-motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="chassis-left_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>

    <transmission name="right_wheel-trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="right_wheel-motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="chassis-right_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <!-- <transmission name="trans_leftwheel"> -->
    <!--   <type>transmission_interface/SimpleTransmission</type> -->
    <!--   <joint name="joint_chassis_leftwheel"> -->
    <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
    <!--   </joint> -->
    <!--   <actuator name="motor_leftwheel"> -->
    <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
    <!--     <mechanicalReduction>1</mechanicalReduction> -->
    <!--   </actuator> -->
    <!-- </transmission> -->

  <!-- Used for fixing robot to Gazebo 'base_link' -->
<!--
  <joint name="joint_world_hat" type="floating">
    <parent link="world"/>
    <child link="link_hat"/>
  </joint>

  <link name="link_hat">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_HAT}" radius="${R_HAT}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_HAT}" radius="${R_HAT}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${M_HAT}"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="${1/12*M_HAT*(3*R_HAT*R_HAT+L_HAT*L_HAT)}" ixy="0" ixz="0" iyy="${1/12*M_HAT*(3*R_HAT*R_HAT+L_HAT*L_HAT)}" iyz="0" izz="${1/2*M_HAT*R_HAT*R_HAT}"/>
    </inertial>
  </link>

  <joint name="joint_hat_chassis" type="continuous">
    <origin rpy="0 0 ${PI/2}" xyz="0.0 0 ${(-L_HAT-L_CHASSIS)/2}"/>
    <parent link="link_hat"/>
    <child link="link_chassis" />
    <axis rpy="0 0 0" xyz="0 0 1"/>
  </joint>

  <link name="link_chassis">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_CHASSIS}" radius="${R_CHASSIS}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_CHASSIS}" radius="${R_CHASSIS}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="${1/12*M_CHASSIS*(3*R_CHASSIS*R_CHASSIS+L_CHASSIS*L_CHASSIS)}" ixy="0" ixz="0" iyy="${1/12*M_CHASSIS*(3*R_CHASSIS*R_CHASSIS+L_CHASSIS*L_CHASSIS)}" iyz="0" izz="${1/2*M_CHASSIS*R_CHASSIS*R_CHASSIS}"/>
    </inertial>
  </link>

  <joint name="joint_chassis_caster" type="fixed">
    <origin rpy="0 0 0" xyz="0 ${-R_CHASSIS/2} ${-L_CHASSIS/2}"/>
    <parent link="link_chassis"/>
    <child link="link_caster"/>
  </joint>

  <link name="link_caster">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="${R_CASTER}"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="${R_CASTER}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${M_CASTER}"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="${2/5*M_CASTER*R_CASTER*R_CASTER}" ixy="0" ixz="0" iyy="${2/5*M_CASTER*R_CASTER*R_CASTER}" iyz="0" izz="${2/5*M_CASTER*R_CASTER*R_CASTER}"/>
    </inertial>
  </link>

  <joint name="joint_chassis_lwheel" type="continuous">
    <origin rpy="0 0 0" xyz="${R_CHASSIS/2} ${R_CHASSIS/2} 0"/>
    <parent link="link_chassis"/>
    <child link="link_left_wheel" />
    <axis rpy="0 0 0" xyz="1 0 0"/>
  </joint>

  <link name="link_left_wheel">
    <visual>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_WHEEL}" radius="${R_WHEEL}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <collision>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${L_WHEEL}" radius="${R_WHEEL}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${M_WHEEL}"/>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0"/>
      <inertia ixx="${1/12*M_WHEEL*(3*R_WHEEL*R_WHEEL+L_WHEEL*L_WHEEL)}" ixy="0" ixz="0" iyy="${1/12*M_WHEEL*(3*R_WHEEL*R_WHEEL+L_WHEEL*L_WHEEL)}" iyz="0" izz="${1/2*M_WHEEL*R_WHEEL*R_WHEEL}"/>
    </inertial>
  </link>

  <joint name="joint_chassis_rwheel" type="continuous">
    <origin rpy="0 0 0" xyz="${-R_CHASSIS/2} ${R_CHASSIS/2} 0"/>
    <child link="link_right_wheel" />
    <parent link="link_chassis"/>
    <axis rpy="0 0 0" xyz="1 0 0"/>
  </joint>

  <link name="link_right_wheel">
    <collision>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${L_WHEEL}" radius="${R_WHEEL}"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${L_WHEEL}" radius="${R_WHEEL}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <inertial>
      <mass value="${M_WHEEL}"/>
      <origin rpy="0 ${PI/2} 0" xyz="0 0 0"/>
      <inertia ixx="${1/12*M_WHEEL*(3*R_WHEEL*R_WHEEL+L_WHEEL*L_WHEEL)}" ixy="0" ixz="0" iyy="${1/12*M_WHEEL*(3*R_WHEEL*R_WHEEL+L_WHEEL*L_WHEEL)}" iyz="0" izz="${1/2*M_WHEEL*R_WHEEL*R_WHEEL}"/>
    </inertial>
  </link> -->

  <!-- <transmission name="trans_leftwheel"> -->
  <!--   <type>transmission_interface/SimpleTransmission</type> -->
  <!--   <joint name="joint_chassis_leftwheel"> -->
  <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
  <!--   </joint> -->
  <!--   <actuator name="motor_leftwheel"> -->
  <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
  <!--     <mechanicalReduction>1</mechanicalReduction> -->
  <!--   </actuator> -->
  <!-- </transmission> -->

  <!-- <transmission name="trans_rightwheel"> -->
  <!--   <type>transmission_interface/SimpleTransmission</type> -->
  <!--   <joint name="joint_chassis_rightwheel"> -->
  <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
  <!--   </joint> -->
  <!--   <actuator name="motor_rightwheel"> -->
  <!--     <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
  <!--     <mechanicalReduction>1</mechanicalReduction> -->
  <!--   </actuator> -->
  <!-- </transmission> -->

</robot>
