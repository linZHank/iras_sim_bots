<?xml version="1.0"?>



<robot xmlns:xacro="https://www.ros.org/wiki/xacro">
    <xacro:property name="M_PI" value="3.1415926535897931" />

    <xacro:property name="holder_mass" value="0.072"/>
    <xacro:property name="holder_r" value="0.02"/>
    <xacro:property name="holder_l" value="0.07"/>

    <xacro:property name="camera_width" value="0.09"/>
    <xacro:property name="camera_height" value="0.025"/>
    <xacro:property name="camera_depth" value="0.025"/>
    <xacro:property name="camera_mass" value="0.072"/>

    <xacro:macro name="rgbd_camera" params="parent *origin">
        <joint name="${parent}-camera_holder" type="revolute">
            <xacro:insert_block name="origin" />
            <parent link="${parent}"/>
            <child link="camera_holder"/>
            <limit lower="${-M_PI/4}" upper="${M_PI/4}" effort="50" velocity="${M_PI}"/>
            <axis xyz="0 0 1"/>
        </joint>

        <link name="camera_holder">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${holder_l}" radius="${holder_r}"/>
                </geometry>
                <material name="orange"/>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <cylinder length="${holder_l}" radius="${holder_r}"/>
                </geometry>
            </collision>
            <inertial>
				<mass value="${holder_mass}" />
				<origin xyz="0 0 0" />
				<inertia ixx="${1/12*holder_mass*(3*holder_r*holder_r+holder_l*holder_l)}" ixy="0" ixz="0" iyy="${1/12*holder_mass*(3*holder_r*holder_r+holder_l*holder_l)}" iyz="0" izz="${1/2*holder_mass*holder_r*holder_r}"/>
			</inertial>
		</link>

        <joint name="camera_holder-camera_body" type="revolute">
            <origin rpy="0 0 0" xyz="0 0 ${holder_l/2+camera_height/2}"/>
            <parent link="camera_holder"/>
            <child link="camera_body"/>
            <limit lower="${-M_PI/6}" upper="${M_PI/12}" effort="50" velocity="${M_PI}"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="camera_body">
			<visual>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<geometry>
					<box size="${camera_depth} ${camera_width} ${camera_height}" />
				</geometry>
                <color rgba="0.5 0.5 0.5 1"/>
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<geometry>
                    <box size="${camera_depth} ${camera_width} ${camera_height}" />
				</geometry>
			</collision>
            <inertial>
				<mass value="${camera_mass}" />
				<origin xyz="0 0 0" />
				<inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4" />
			</inertial>
		</link>

        <joint name="camera_body-depth_frame" type="fixed">
            <origin xyz="${camera_depth/2} 0.0175 0.0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
            <parent link="camera_body" />
            <child link="camera_depth_frame"/>
        </joint>

        <link name="camera_depth_frame"/>

        <joint name="camera_body-depth_optical" type="fixed">
            <origin xyz="${camera_depth/2} 0.0175 0" rpy="0 0 0" />
            <parent link="camera_body" />
            <child link="camera_depth_optical"/>
        </joint>

        <link name="camera_depth_optical"/>


        <gazebo reference="camera_depth_optical">
            <sensor type="depth" name="camera">
                <update_rate>30</update_rate>
                <camera>
                    <horizontal_fov>${69.4 * M_PI/180.0}</horizontal_fov>
                    <image>
                        <format>B8G8R8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.3</near>
                        <far>10</far>
                    </clip>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
                    <cameraName>camera</cameraName>
                    <imageTopicName>/camera/color/image_raw</imageTopicName>
                    <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
                    <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
                    <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
                    <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
                    <frameName>camera</frameName>
                </plugin>
            </sensor>
        </gazebo>

    </xacro:macro>


    <!-- <xacro:macro name="rgbd_camera_gazebo_plugin_macro" params="link_name camera_name:=camera frame_name">
        <gazebo reference="${link_name}">
            <sensor type="depth" name="${link_name}_camera">
                <update_rate>30</update_rate>
                <camera>
                    <horizontal_fov>${69.4 * M_PI/180.0}</horizontal_fov>
                    <image>
                        <format>B8G8R8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.3</near>
                        <far>10</far>
                    </clip>
                </camera>
                <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
                    <cameraName>${camera_name}</cameraName>
                    <imageTopicName>/${camera_name}/color/image_raw</imageTopicName>
                    <cameraInfoTopicName>/${camera_name}/color/camera_info</cameraInfoTopicName>
                    <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
                    <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
                    <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
                    <frameName>${frame_name}</frameName>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro> -->

</robot>
